{"version":3,"sources":["widgets/CompactPicker.js","fields/Frequency.js","forms/definitions.js","fields/index.js","widgets/index.js","forms/SubscriptionOptinWidgetForm.js","App.js","serviceWorker.js","index.js"],"names":["SketchExample","props","_this","Object","_Users_uke_dev_og_self_serv_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_uke_dev_og_self_serv_ui_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_uke_dev_og_self_serv_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","displayColorPicker","value","handleClick","setState","handleClose","handleChange","color","console","log","hex","setImmediate","onChange","styles","reactCSS","default","display","verticalAlign","width","height","marginRight","borderRadius","background","swatch","padding","cursor","popover","position","zIndex","cover","top","right","bottom","left","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","style","onClick","className","react_color__WEBPACK_IMPORTED_MODULE_7__","React","Component","Frequency","_Users_uke_dev_og_self_serv_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_uke_dev_og_self_serv_ui_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_uke_dev_og_self_serv_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","schema","properties","period","_Users_uke_dev_og_self_serv_ui_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","every","formData","name","_this2","event","_Users_uke_dev_og_self_serv_ui_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","_this$state","react__WEBPACK_IMPORTED_MODULE_7___default","type","step","forms_definitions","definitions","OfferType","enum","enumNames","WidgetSettings","frequencies","title","items","$ref","defaultFrequency","offerType","defaultOptin","enumName","Font","familly","size","unit","fields","frequency","widgets","CompactPicker","uiSchema","settings","classNames","textCopy","ui:options","label","tooltip","toolTipCopy","ui:widget","upsellModalCopy","global","ui:title","number","upsellColor","upsell","objectSpread","defaultFrequencyCopy","subscribeOptionCopy","oneTimeOptionCopy","toolTip","toolTipLinkCopy","upsellCopy","upsellButtonCopy","upsellMessage","upsellModalOneTimeOptionCopy","upsellModalSubscribeOptionCopy","upsellModalAddButton","SubscriptionOptinWidgetForm","react_default","lib_default","assign","bind","PageContent","classCallCheck","possibleConstructorReturn","getPrototypeOf","WidgetPreview","forms_SubscriptionOptinWidgetForm","onSubmit","onError","ConextHelp","_ref","JSON","stringify","href","App","App_PageContent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86f81acf.chunk.js","sourcesContent":["import React from 'react';\nimport reactCSS from 'reactcss';\nimport { SketchPicker } from 'react-color';\n\nclass SketchExample extends React.Component {\n  state = {\n    displayColorPicker: false,\n    value: '#000'\n  };\n\n  constructor(props) {\n    super(props);\n    this.state.value = props.value;\n  }\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false });\n  };\n\n  handleChange = color => {\n    console.log(color);\n    this.setState({ value: color.hex });\n    setImmediate(() => this.props.onChange(color.hex));\n  };\n\n  render() {\n    const styles = reactCSS({\n      default: {\n        color: {\n          display: 'inline-block',\n          verticalAlign: 'middle',\n          width: '36px',\n          height: '100%',\n          marginRight: '5px',\n          borderRadius: '2px',\n          background: this.state.value\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          display: 'inline-block',\n          cursor: 'pointer',\n          width: '65px'\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2'\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px'\n        }\n      }\n    });\n\n    return (\n      <div>\n        <div style={styles.swatch} onClick={this.handleClick} className=\"form-control\">\n          <span style={styles.color} />\n          <span className=\"caret\"></span>\n        </div>\n        {this.state.displayColorPicker ? (\n          <div style={styles.popover}>\n            <div style={styles.cover} onClick={this.handleClose} />\n            <SketchPicker color={this.state.value} onChange={this.handleChange} />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default SketchExample;\n","import React from 'react';\n\nexport default class Frequency extends React.Component {\n    constructor(props) {\n      super(props);\n      console.log(props);\n      console.log(props.schema.properties.period);\n      this.state = {\n        every: '',\n        period: '',\n        ...props.formData\n      };\n    }\n  \n    onChange(name) {\n      return event => {\n        this.setState({ [name]: event.target.value });\n        setImmediate(() => this.props.onChange(this.state));\n      };\n    }\n  \n    render() {\n      const { every, period } = this.state;\n      const schema = {\n        properties: {\n          period: this.props.schema.properties.period\n        }\n      };\n      return (\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <label>Latitude</label>\n            <input className=\"form-control\" type=\"text\" value={every} step=\"0.00001\" onChange={this.onChange('every')} />\n          </div>\n          <div className=\"col-sm-6\">\n            <label>Longitude</label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              value={period}\n              step=\"0.00001\"\n              onChange={this.onChange('period')}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n","export const definitions = {\n  OfferType: {\n    type: 'string',\n    enum: ['radio', 'toggle', 'select'],\n    enumNames: ['Radio Button', 'Toggle Button', 'Select Dropdown'],\n    default: 'radio'\n  },\n  Frequency: {\n    type: 'object',\n    properties: {\n      every: {\n        type: 'number',\n        default: 1\n      },\n      period: {\n        type: 'number',\n        enum: [1, 2, 3],\n        enumNames: ['Days', 'Weeks', 'Months'],\n        default: 2\n      }\n    }\n  },\n  WidgetSettings: {\n    type: 'object',\n    properties: {\n      frequencies: {\n        title: 'Available frequencies',\n        type: 'array',\n        items: {\n          $ref: '#/definitions/Frequency'\n        },\n        default:[\n            {every: 1, period:2},\n            {every: 2, period:2},\n            {every: 1, period:3},\n        ]\n      },\n      defaultFrequency: {\n        title: 'Default frequency selection',\n        $ref: '#/definitions/Frequency'\n      },\n      offerType: {\n        title: 'Type',\n        $ref: '#/definitions/OfferType'\n      },\n      defaultOptin: {\n        title: 'Offer default selection',\n        enum: ['one-time', 'subscribed'],\n        enumName: ['One time', 'Subscribed'],\n        default: 'one-time'\n      }\n    }\n  },\n  Font: {\n    type: 'object',\n    properties: {\n      familly: {\n        title: 'Font',\n        type: 'string',\n        default: 'Helvetica, sans-serif'\n      },\n      color: {\n        type: 'string'\n      },\n      size: {\n        type: 'number',\n        default: 12\n      },\n      unit: {\n        type: 'string',\n        default: 'px',\n        enum: ['px', 'em', '%', 'rem']\n      }\n    }\n  }\n};\n\nexport default { definitions };\n","import Frequency from './Frequency';\nexport default {\n  frequency: Frequency\n};\n","import CompactPicker from './CompactPicker';\nexport default {\n  color: CompactPicker\n};\n","import React from 'react';\nimport Form from 'react-jsonschema-form';\n\nimport definitions from './definitions';\nimport fields from '../fields';\nimport widgets from '../widgets';\n\nexport const uiSchema = {\n  settings: {\n    defaultFrequency: {\n      classNames: 'form-inline'\n    },\n    frequencies: {\n      items: {\n        classNames: 'form-inline'\n      }\n    }\n  },\n  textCopy: {\n    'ui:options': {\n      label: false\n    },\n    tooltip: {\n      'ui:options': {\n        label: true\n      }\n    },\n    toolTipCopy: {\n      'ui:widget': 'textarea'\n    },\n    upsellModalCopy: {\n      'ui:widget': 'textarea'\n    }\n  },\n  styles: {\n    global: {\n      'ui:title': 'Global font',\n      color: {\n        'ui:widget': 'color',\n        'ui:options': {\n          label: true\n        }\n      },\n      classNames: 'form-inline',\n      size: {\n        unit: {\n          'ui:options': {\n            label: true\n          }\n        },\n        number: {\n          'ui:options': {\n            label: true\n          }\n        }\n      }\n    },\n    tooltip: {\n      'ui:title': 'Tooltip font',\n      color: {\n        'ui:widget': 'color',\n        'ui:options': {\n          label: true\n        }\n      },\n      classNames: 'form-inline',\n      size: {\n        unit: {\n          'ui:options': {\n            label: true\n          }\n        }\n      }\n    },\n    upsellColor: {\n      'ui:title': 'Upsell button',\n      'ui:widget': 'color'\n    },\n    upsell: {\n      'ui:title': 'Upsell button font',\n      color: {\n        'ui:widget': 'color',\n        'ui:options': {\n          label: true\n        }\n      },\n      classNames: 'form-inline',\n      size: {\n        unit: {\n          'ui:options': {\n            label: true\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const schema = {\n  ...definitions,\n  type: 'object',\n  properties: {\n    settings: {\n      title: 'Widget settings',\n      $ref: '#/definitions/WidgetSettings'\n    },\n    textCopy: {\n      title: 'Widget copy',\n      type: 'object',\n      properties: {\n        defaultFrequencyCopy: {\n          type: 'string',\n          default: 'Recommended',\n          title: 'Default frequency copy'\n        },\n        subscribeOptionCopy: {\n          type: 'string',\n          default: 'Subscribe and get 20% off',\n          title: 'Subscribe option copy'\n        },\n        oneTimeOptionCopy: {\n          type: 'string',\n          default: 'One-time    ',\n          title: 'One-time option copy'\n        },\n        toolTip: {\n          type: 'boolean',\n          default: 'Add tool tip',\n          title: 'Tool tip'\n        },\n        toolTipLinkCopy: {\n          type: 'string',\n          default: 'More info',\n          title: 'Tool tip link copy'\n        },\n        toolTipCopy: {\n          type: 'string',\n          default:\n            'Subscribe to this product and have it conveniently delivered to you at the frequency you choose! Read the FAQ here. Promotion subject to change.',\n          title: 'Tool tip copy'\n        },\n        upsellCopy: {\n          type: 'string',\n          default: 'Add to upcoming subscription order and receive 20% off',\n          title: 'Upsell copy'\n        },\n        upsellButtonCopy: {\n          type: 'string',\n          default: 'Add to Next Order',\n          title: 'Upsell button copy'\n        },\n        upsellMessage: {\n          type: 'string',\n          default: 'Add this item to your next order on [order_date] and get 10% off',\n          title: 'Upsell message'\n        },\n        upsellModalCopy: {\n          type: 'string',\n          default:\n            'Subscribe to this product and have it conveniently delivered to you at the frequency you choose! Read the FAQ here. Promotion subject to change.',\n          title: 'Upsell modal copy'\n        },\n        upsellModalOneTimeOptionCopy: {\n          type: 'string',\n          default: 'Get one-time',\n          title: 'Upsell modal one-time option copy'\n        },\n        upsellModalSubscribeOptionCopy: {\n          type: 'string',\n          default: 'Subscribe and get 10% off on every order',\n          title: 'Upsell modal subscribe option copy'\n        },\n        upsellModalAddButton: {\n          type: 'string',\n          default: 'Add',\n          title: 'Upsell modal add button'\n        }\n      }\n    },\n    styles: {\n      type: 'object',\n      title: 'Widget styles',\n      properties: {\n        global: {\n          $ref: '#/definitions/Font',\n          default: {\n            familly: 'Arial, Helvetica, sans-serif',\n            size: '13',\n            unit: 'px',\n            color: '#333333'\n          }\n        },\n        tooltip: {\n          $ref: '#/definitions/Font',\n          default: {\n            familly: 'Arial, Helvetica, sans-serif',\n            size: '13',\n            unit: 'px',\n            color: '#298266'\n          }\n        },\n        upsellColor: {\n          type: 'string',\n          default: '#298266'\n        },\n        upsell: {\n          $ref: '#/definitions/Font',\n          default: {\n            familly: 'Arial, Helvetica, sans-serif',\n            size: '13',\n            unit: 'px',\n            color: '#298266'\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionOptinWidgetForm = props => (\n  <Form schema={schema} uiSchema={uiSchema} fields={fields} widgets={widgets} {...props}>\n    {/* Empty div to disable action buttons  */}\n    <div />\n  </Form>\n);\n\nexport default SubscriptionOptinWidgetForm;\n","import React from 'react';\nimport './App.css';\n\nimport OfferWidgetForm from './forms/SubscriptionOptinWidgetForm';\nimport CompactPicker from './widgets/CompactPicker';\n\nconst log = type => console.log.bind(console, type);\nexport function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"col-md-2 sidebar\">\n        \n        nav\n      </div>\n\n      <div className=\"col-md-10 page-content\">\n        <PageContent />\n      </div>\n    </div>\n  );\n}\nclass PageContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: {}\n    };\n  }\n  // componentWillMount() {\n  //   fetch('http://localhost:9000/spec/reservation')\n  //     .then(res => res.json())\n  //     .then(schema =>\n  //       this.setState({\n  //         schema: {\n  //           ...schema,\n  //           properties: {\n  //             ...omit(schema.properties, ['_id', '__v'])\n  //           }\n  //         }\n  //       })\n  //     );\n  // }\n  // onSubmit({ formData }) {\n  //   fetch('http://localhost:9000/api/reservation', {\n  //     method: 'POST', // *GET, POST, PUT, DELETE, etc.\n  //     mode: 'cors', // no-cors, cors, *same-origin\n  //     cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n  //     credentials: 'same-origin', // include, *same-origin, omit\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //       // 'Content-Type': 'application/x-www-form-urlencoded',\n  //     },\n  //     redirect: 'follow', // manual, *follow, error\n  //     referrer: 'no-referrer', // no-referrer, *client\n  //     body: JSON.stringify(formData) // body d\n  //   })\n  //     .then(res => res.json())\n  //     .then(data =>\n  //       this.setState({\n  //         data\n  //       })\n  //     );\n  // }\n  onChange() {\n    return event => this.setState({ formData: event.formData });\n  }\n  render() {\n    const formData = this.state.formData;\n    return (\n      <div className=\"\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h1>Subscription Opt-in Widget</h1>\n          </div>\n        </div>\n        <div className=\"row form-top-area\">\n          <div className=\"col-md-9\">\n            <WidgetPreview formData={formData} />\n          </div>\n          <div className=\"col-md-3 form-actions\">\n            <button className=\"btn btn-info btn-lg\">Save</button>\n          </div>\n        </div>\n        <div className=\"row form-body-area\">\n          <div className=\"col-md-9\">\n            <OfferWidgetForm\n              formData={formData}\n              onChange={this.onChange()}\n              onSubmit={log('submit')}\n              onError={log('errors')}\n            />\n          </div>\n          <div className=\"col-md-3\">\n            <ConextHelp />{' '}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction WidgetPreview({ formData }) {\n  return (\n    <fieldset className=\"widgetPreview\">\n      <legend>Widget preview</legend>\n      <pre>{JSON.stringify(formData, null, 4)}</pre>\n    </fieldset>\n  );\n}\n\nfunction ConextHelp(props) {\n  return (\n    <div>\n      <h3>What is a widget?</h3>\n      <p>\n        Welcome to the incentives page where you learn things about incentives. This would be high level info about this\n        page and would show by default before you’ve done anything on the page.\n      </p>\n\n      <p>\n        We might even have more than one paragraph and this section will float along with you while you scroll. That’s\n        all I got please enjoy!\n      </p>\n\n      <h3>The more you know...</h3>\n      <p>\n        <a href=\"#\">Here is a link to help you learn more</a>\n      </p>\n      <p>\n        <a href=\"#\">Who knows what kind of stuff we can have here</a>\n      </p>\n      <p>\n        <a href=\"#\">There is a lot of info we’ll need to add</a>\n      </p>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}